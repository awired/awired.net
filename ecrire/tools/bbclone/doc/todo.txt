Roadmap for BBClone.

Some changes were made in regard to what is feasible in reality and what needs
to be postponed to a later version.

State:
Were are finally heading to the major rewrite of BBClone.

Versioning:
As of now, we plan to follow a scheme fairly known from the Linux Kernel.
starting of 0.4.0 the even version numbers will mark our stable tree, whereas
odd numbers mark the development series. Which is why our current tree sticks
around 0.39.x. Some examples for illustration:
stable releases: 0.4.0, 0.4.7, 0.6.3....
devel releases: 0.5.1, 0.7.10 etc
The version numbers follow a more common way of marking versions, subversions
and revisions as the current scheme is misleading. Instead of 0.39 we will
write 0.3.9 in the future. This change will be realised as of the first beta of
0.4.0. The current stable tree won't be affected as it's soon outdated anyway.

Collecting and assembling data:
Currently we dump all data into one file. The monolithic approach has
advantages in term of speed (less write processes) but disadvantages in terms
of data security (large file needs more time to be written) and memory
consumption (all data needs to be loaded, even if we only need a small portion
of it). In general we got two sorts of data, one kind of static with the
purpose of counting several items and the other kind sort of dynamic as
illustration of the "life" processes. It would make sense to separate these two
units and save a lot of resources this way. The data presentation is already
separating them (detailed stats <=> global stats, time stats). 

Future:
- Limit access to authorised users only (optional feature for standalone
  installations)
- Separate output from counter processing
- Just one file in bbclone's root which includes stuff as needed
- Facility for setting default page  or turning off things we don't want to see
- Referrer ignoring by means of regular expressions
- Documents restructuring and increased modularity
- More effective way of storing data
- More categories as refinement of existing stuff
- Cookies to avoid inflated unique hits by AOL users
- Option to use a database if flat files fail
- Themes
